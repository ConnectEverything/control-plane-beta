apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helix.fullname" . }}
  labels:
    {{- include "helix.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helix.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helix.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helix.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - -c
            - /conf/rna.cue
            - server
            - start
          volumeMounts:
            - name: config
              subPath: rna.cue
              mountPath: "/conf/rna.cue"
            {{- if .Values.embeddedPrometheus.persistent }}
            - name: prometheus
              mountPath: "{{ .Values.helix.dataDirectory | default "/app/data" }}/prometheus"
            {{- end }}
            {{- if .Values.embeddedPostgres.persistent }}
            - name: postgres
              mountPath: "{{ .Values.helix.dataDirectory | default "/app/data" }}/postgres"
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.helix.port | default 8080 }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metrics.port | default 7777 }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: "{{ include "helix.fullname" . }}-config"
        {{- if .Values.embeddedPrometheus.persistent }}
        - name: prometheus
          persistentVolumeClaim:
            claimName: "{{ include "helix.fullname" . }}-prometheus"
        {{- end }}
        {{- if .Values.embeddedPostgres.persistent }}
        - name: postgres
          persistentVolumeClaim:
            claimName: "{{ include "helix.fullname" . }}-postgres"
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
